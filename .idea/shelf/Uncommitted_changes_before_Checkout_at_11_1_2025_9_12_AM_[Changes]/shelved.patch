Index: code.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>print('hello')
===================================================================
diff --git a/code.py b/code.py
--- a/code.py	(revision 2f0a96e6544c733b7bb71141a6aae023a28912ac)
+++ b/code.py	(date 1761960599756)
@@ -1,1 +1,51 @@
-print('hello')
\ No newline at end of file
+import yfinance as yf
+import pandas as pd
+import os
+
+def download_stock_data(ticker_symbol: str, period: str = "max"):
+    """
+    T·∫£i d·ªØ li·ªáu c·ªï phi·∫øu t·ª´ Yahoo Finance bao g·ªìm:
+    Open, High, Low, Close, Adj Close, Volume.
+    """
+
+    try:
+        # T·∫£i d·ªØ li·ªáu theo t·ª´ng ng√†y (interval='1d')
+        data = yf.download(ticker_symbol, period=period, interval="1d", auto_adjust=False)
+
+        if data.empty:
+            print(f"Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu cho m√£ {ticker_symbol}.")
+            return None
+
+        # N·∫øu c·ªôt c√≥ MultiIndex (Price, Ticker) ‚Üí g·ª° b·ªè c·∫•p ƒë·∫ßu
+        if isinstance(data.columns, pd.MultiIndex):
+            data.columns = data.columns.get_level_values(0)
+
+        # Gi·ªØ l·∫°i c√°c c·ªôt c·∫ßn thi·∫øt
+        data = data[['Open', 'High', 'Low', 'Close', 'Adj Close', 'Volume']]
+
+        # ƒê∆∞a index 'Date' ra th√†nh c·ªôt
+        data.reset_index(inplace=True)
+
+        return data
+
+    except Exception as e:
+        print(f"L·ªói khi t·∫£i d·ªØ li·ªáu {ticker_symbol}: {e}")
+        return None
+
+
+def save_data_to_csv(data: pd.DataFrame, ticker_symbol: str,
+                     drive_path: str = "/content/drive/MyDrive/StockData"):
+    """
+    L∆∞u d·ªØ li·ªáu c·ªï phi·∫øu v√†o file CSV trong Google Drive.
+    T√™n file c√≥ d·∫°ng: TICKER_dd_mm.csv
+    """
+    if not os.path.exists(drive_path):
+        os.makedirs(drive_path)
+        print(f"üìÅ ƒê√£ t·∫°o th∆∞ m·ª•c: {drive_path}")
+
+    # ƒê·∫∑t t√™n file theo ng√†y t·∫£i
+    date_str = pd.Timestamp.now().strftime("%d_%m")
+    filename = os.path.join(drive_path, f"{ticker_symbol}_{date_str}.csv")
+
+    # L∆∞u file CSV (kh√¥ng ghi index)
+    data.to_csv(filename, index=False)
